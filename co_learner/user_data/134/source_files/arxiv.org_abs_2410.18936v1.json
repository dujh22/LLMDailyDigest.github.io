{
    "link": "http://arxiv.org/abs/2410.18936v1",
    "title": "动态匹配中的组合匹配与高效权重减少",
    "summary": "我们研究了一个基础性问题，即在具有$n$个节点的动态图中维护一个$(1-\\varepsilon)$近似最大权匹配（MWM），图中边有插入和删除操作。我们提供了一个通用的减少方法，将具有$\\mathrm{poly}(n)$权值范围的图中的问题减少到$\\mathrm{poly}(1/\\varepsilon)$，只需增加一个$\\mathrm{poly}(1/\\varepsilon)$的更新时间。这比Gupta-Peng（FOCS 2013）之前的减少方法有所改进，该方法将问题减少到权重范围为$\\varepsilon^{-O(1/\\varepsilon)}$，但更新时间增加了$O(\\log n)$的乘法成本。当与Bernstein-Dudeja-Langley（STOC 2021）的减少方法结合时，这导致了一个从具有$\\mathrm{poly}(n)$权值范围的二分图中的动态$(1-\\varepsilon)$近似MWM到二分图中的动态$(1-\\varepsilon)$近似最大容量匹配的减少，更新时间仅增加了一个$\\mathrm{poly}(1/\\varepsilon)$的乘法成本，从而解决了[GP'13; BDL'21]中的一个开放问题。此外，我们展示我们的方法适用于流计算、共享内存工作深度和大规模并行计算模型中的MWM问题。我们还应用我们的技术得到了在一般图中高效动态近似加权分数匹配的算法。我们的框架底层是一个关于MWM的新结构性结果，我们称之为“匹配组合引理”，以及可能具有独立兴趣的新动态匹配子程序。",
    "user_summary": "我们研究了一个基础性问题，即在具有$n$个节点的动态图中维护一个$(1-\\varepsilon)$近似最大权匹配（MWM），图中边有插入和删除操作。我们提供了一个通用的减少方法，将具有$\\mathrm{poly}(n)$权值范围的图中的问题减少到$\\mathrm{poly}(1/\\varepsilon)$，只需增加一个$\\mathrm{poly}(1/\\varepsilon)$的更新时间。这比Gupta-Peng（FOCS 2013）之前的减少方法有所改进，该方法将问题减少到权重范围为$\\varepsilon^{-O(1/\\varepsilon)}$，但更新时间增加了$O(\\log n)$的乘法成本。当与Bernstein-Dudeja-Langley（STOC 2021）的减少方法结合时，这导致了一个从具有$\\mathrm{poly}(n)$权值范围的二分图中的动态$(1-\\varepsilon)$近似MWM到二分图中的动态$(1-\\varepsilon)$近似最大容量匹配的减少，更新时间仅增加了一个$\\mathrm{poly}(1/\\varepsilon)$的乘法成本，从而解决了[GP'13; BDL'21]中的一个开放问题。此外，我们展示我们的方法适用于流计算、共享内存工作深度和大规模并行计算模型中的MWM问题。我们还应用我们的技术得到了在一般图中高效动态近似加权分数匹配的算法。我们的框架底层是一个关于MWM的新结构性结果，我们称之为“匹配组合引理”，以及可能具有独立兴趣的新动态匹配子程序。",
    "keywords": [
        "动态图",
        "最大权匹配",
        "$(1-\\varepsilon)$近似",
        "减少方法",
        "权值范围",
        "更新时间",
        "二分图",
        "流计算",
        "共享内存",
        "工作深度",
        "大规模并行计算",
        "分数匹配",
        "匹配组合引理"
    ],
    "timestamp": "2024-10-27T05:15:20.655234"
}