{
    "link": "http://arxiv.org/abs/2410.18893v1",
    "title": "在开放世界领域创建和修复机器人程序",
    "summary": "使用大型语言模型（LLMs）生成机器人程序，实现了能完成多样化任务的机器人系统。然而，LLM生成的程序可能存在缺陷，可能是由于指令的模糊性、对所需任务的误解或关于世界状态的缺失信息导致的。在程序运行过程中，世界状态会变化，它们会收集新的信息。当出现故障时，重要的是它们能够从当前世界状态中恢复，并避免重复之前成功完成的步骤。为此，我们提出了一种名为RoboRepair的系统，该系统可以追踪程序执行到错误发生前的过程，然后运行一个由LLM生成的最小化重复动作的恢复程序。\n\n为了评估我们系统的有效性，我们创建了一个基准测试，包括11个具有各种错误条件的任务，这些任务需要生成恢复程序。我们将恢复程序的效率与一个拥有预知未来错误能力的“先知”计划进行了比较。",
    "user_summary": "使用大型语言模型（LLMs）生成机器人程序，实现了能完成多样化任务的机器人系统。然而，LLM生成的程序可能存在缺陷，可能是由于指令的模糊性、对所需任务的误解或关于世界状态的缺失信息导致的。在程序运行过程中，世界状态会变化，它们会收集新的信息。当出现故障时，重要的是它们能够从当前世界状态中恢复，并避免重复之前成功完成的步骤。为此，我们提出了一种名为RoboRepair的系统，该系统可以追踪程序执行到错误发生前的过程，然后运行一个由LLM生成的最小化重复动作的恢复程序。\n\n为了评估我们系统的有效性，我们创建了一个基准测试，包括11个具有各种错误条件的任务，这些任务需要生成恢复程序。我们将恢复程序的效率与一个拥有预知未来错误能力的“先知”计划进行了比较。",
    "keywords": [
        "LLMs",
        "机器人",
        "程序",
        "错误",
        "世界状态",
        "变化",
        "恢复",
        "重复动作",
        "RoboRepair",
        "执行",
        "错误",
        "基准测试",
        "任务",
        "评估",
        "效率",
        "先知",
        "计划"
    ],
    "timestamp": "2024-10-27T05:16:33.515578"
}